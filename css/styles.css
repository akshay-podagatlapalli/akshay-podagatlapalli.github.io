/* Global cursor style */
body, body a, body button, body a:hover, body button:hover, body a:focus, body button:focus {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" height="32" width="32"><circle cx="16" cy="16" r="10" fill="%2300FF00" stroke="black" stroke-width="2"/></svg>'), auto !important;
}


body {
    font-family: Arial, sans-serif;
    background-color: #000000; /* Default background color */
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    transition: background-color 0.3s ease; /* Smooth transition for background color change */
}


.scene {
    width: 200px;
    height: 200px;
    position: relative;
    transform-style: preserve-3d;
    transform: rotateX(0deg) rotateY(0deg);
    background: none;
}

#toggleBackground {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 10px 15px;
    z-index: 1000;
    background: none;
    border: none;
    color: white; /* Or any color that matches your design */
}

#toggleBackground .fas {
    font-size: 1.5em; /* Adjust size as needed */
}


.cube-container {
    width: 100%;
    height: 100%;
  }


  .titleContainer {
    font-size: 2em;
    position: absolute;
    top: 5%;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    white-space: nowrap;
    color: #00ff08cc; /* This sets the font color to white */
}

.cursor {
    content: "";
    display: inline-block;
    width: 0.5em; /* Set the width to match height for a circle */
    height: 0.5em; /* Set the height you want for the circle */
    background-color: rgba(0, 255, 8, 0.8);
    border-radius: 50%; /* This makes the cursor a circle */
    animation: blink 1s infinite alternate;
    vertical-align: middle; /* Align the cursor vertically with the text */
    margin-bottom: 0.2em; /* Adjust as needed to center with the text */
}

/* Background Color Classes */
.bone-white-background {
    background-color: #e3dac9; /* Bone white color */
}

.black-background {
    background-color: #000000; /* Ensuring default black color is set here for clarity */
}

@keyframes blink {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

.ribbon {
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 50px; 
    background-color: rgb(255, 255, 255);
    z-index: 100; 
    display: flex;
    justify-content: center;
    align-items: center;
    transform: translateY(-50%);
}

.contentLinks {
    position: absolute;
    top: 20%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    gap: 50px;
}


.contentLinks a {
    color: rgba(0, 255, 8, 0.8);  /* Adjust as needed */
    text-decoration: none;
    padding: 10px 20px;
    background-color: rgba(0,0,0,0.6);
    border-radius: 10px;
    transition: background-color 0.3s ease;
    white-space: nowrap; /* Prevents the text from wrapping */
    /* Optional: Add hover effect */
    &:hover {
        background-color: rgba(0, 255, 8, 0.8);
    }
}

/* Media query for smaller screens */
@media (max-width: 768px) {
    .contentLinks {
        justify-content: flex-start; /* Aligns items to the start of the container */
    }

    .contentLinks a {
        padding: 5px 10px; /* Reduces padding on smaller screens */
        font-size: 0.8em; /* Reduces font size on smaller screens */
    }
}

.white-text {
    color: #FFFFFF; /* White color */
}

.black-text {
    color: #000000; /* Black color */
}

